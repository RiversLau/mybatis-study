<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yoxiang.mapper.UserMapper">

    <resultMap id="userMap" type="com.yoxiang.model.SysUser">
        <id property="id" column="id"/>
        <result property="userName" column="user_name"/>
        <result property="userPassword" column="user_password"/>
        <result property="userEmail" column="user_email"/>
        <result property="userInfo" column="user_info"/>
        <result property="headImg" column="head_img" jdbcType="BLOB"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="selectById" resultMap="userMap">
        select * from sys_user where id = #{id, jdbcType=INTEGER}
    </select>

    <select id="selectAll" resultType="com.yoxiang.model.SysUser">
        select id,
               user_name as userName,
               user_password as userPassword,
               user_email as userEmail,
               user_info as userInfo,
               head_img as headImg,
               create_time as createTime
        from sys_user
    </select>

    <select id="selectRolesByUserId" resultType="com.yoxiang.model.SysRole">
        SELECT
          r.id,
          r.role_name as roleName,
          r.enabled,
          r.create_by as createBy,
          r.create_time as createTime
        FROM sys_user u
        INNER JOIN sys_user_role ur on u.id = ur.user_id
        INNER JOIN sys_role r on ur.role_id = r.id
        WHERE u.id = #{id}
    </select>

    <select id="selectRolesByUserId2" resultType="com.yoxiang.model.SysRoleExtend">
        SELECT
          r.id,
          r.role_name as roleName,
          r.enabled,
          r.create_by as createBy,
          r.create_time as createTime,
          u.user_name as userName
        FROM sys_user u
        INNER JOIN sys_user_role ur on u.id = ur.user_id
        INNER JOIN sys_role r on ur.role_id = r.id
        WHERE u.id = #{id}
    </select>

    <select id="selectRolesByUserId3" resultType="com.yoxiang.model.SysRoleExtend2">
        SELECT
          r.id,
          r.role_name as roleName,
          r.enabled,
          r.create_by as createBy,
          r.create_time as createTime,
          u.user_name as "user.userName",
          u.user_email as "user.userEmail"
        FROM sys_user u
        INNER JOIN sys_user_role ur on u.id = ur.user_id
        INNER JOIN sys_role r on ur.role_id = r.id
        WHERE u.id = #{id}
    </select>

    <select id="selectRolesByUserIdAndRoleEnabled" resultType="com.yoxiang.model.SysRole">
        SELECT
          r.id,
          r.role_name as roleName,
          r.enabled,
          r.create_by as createBy,
          r.create_time as createTime
        FROM sys_user u
        INNER JOIN sys_user_role ur on u.id = ur.user_id
        INNER JOIN sys_role r on ur.role_id = r.id
        WHERE u.id = #{userId} and r.enabled = #{enabled}
    </select>

    <select id="selectRolesByUserIdAndRoleEnabled2" resultType="com.yoxiang.model.SysRole">
        SELECT
          r.id,
          r.role_name as roleName,
          r.enabled,
          r.create_by as createBy,
          r.create_time as createTime
        FROM sys_user u
        INNER JOIN sys_user_role ur on u.id = ur.user_id
        INNER JOIN sys_role r on ur.role_id = r.id
        WHERE u.id = #{user.id} and r.enabled = #{role.enabled}
    </select>

    <insert id="insertUser" parameterType="com.yoxiang.model.SysUser">
        insert into sys_user(
          id, user_name, user_password, user_email, user_info, head_img, create_time)
        values(
          #{id}, #{userName}, #{userPassword}, #{userEmail},
          #{userInfo}, #{headImg, jdbcType=BLOB},
          #{createTime, jdbcType=TIMESTAMP}
        )
    </insert>

    <insert id="insertUser2" useGeneratedKeys="true" keyProperty="id" parameterType="com.yoxiang.model.SysUser">
        insert into sys_user(
          user_name, user_password, user_email, user_info, head_img, create_time)
        values(
          #{userName}, #{userPassword}, #{userEmail},
          #{userInfo}, #{headImg, jdbcType=BLOB},
          #{createTime, jdbcType=TIMESTAMP}
        )
    </insert>

    <insert id="insertUser3" useGeneratedKeys="true" keyProperty="id" parameterType="com.yoxiang.model.SysUser">
        insert into sys_user(
          user_name, user_password, user_email, user_info, head_img, create_time)
        values(
          #{userName}, #{userPassword}, #{userEmail},
          #{userInfo}, #{headImg, jdbcType=BLOB},
          #{createTime, jdbcType=TIMESTAMP}
        )
        <selectKey keyColumn="id" keyProperty="id" resultType="long" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <update id="updateById" parameterType="com.yoxiang.model.SysUser">
        update sys_user
        set user_name = #{userName},
            user_password = #{userPassword},
            user_email = #{userEmail},
            user_info = #{userInfo},
            head_img = #{headImg, jdbcType=BLOB},
            create_time = #{createTime, jdbcType=TIMESTAMP}
        where id = #{id}
    </update>

    <delete id="deleteById">
        delete from sys_user
        where id = #{id}
    </delete>
</mapper>